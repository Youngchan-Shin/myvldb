B+ 트리 개념은 B트리와 같음. 하지만 B트리는 entry sequenced file을 이용하여 데이터 파일을 표현,
B+트리는 indexed sequential file을 이용

B+ 트리는 인덱스로 indexed sequential file의 separator를 이용한다. Indexed sequential file의 separator는 유일하게 결정되는 것이 아니라, 같은 파일이더라도 다양한 separator가 정의될 수 있으므로, B+ 트리의 개념은 실제 key 값의 가장 짧은 prefix를 separator로 이용하는 simple prefix B+ 트리로 볼 수 있음

*remove
B+ 트리에서 remove 연산은 해당하는 block에서만 변화를 야기한다. 즉, Poland 다음에 저장되어 있었던 Qatar가 block의 첫 번째 데이터로 변경되는 것을 제외하면, B+ 트리 전체에는 어떠한 변화도 발생하지 않는다. B+ 트리의 remove 연산이 갖는 이러한 단순함은 merge, redistribution 등과 같은 복잡한 연산을 빈번하게 수행해야 했었던 B 트리의 remove 연산에 비해 매우 효율적이다.

그러나 특정한 경우에는 B+ 트리의 remove 연산에서도 underflow가 발생한다. 이러한 경우에는 B 트리와 같이 merge, redistribution 연산을 이용하여 트리를 재구성하면 된다.

*insert
B+ 트리의 insert 연산은 B 트리와 마찬가지로 B 트리의 leaf node에 해당하는 block에 데이터가 추가된다. 그 다음, overflow의 발생 여부를 확인하여 overflow가 발생하였다면, parent node로 이동하여 overflow에 대한 처리를 수행한다.

*index set
B+ 트리에서 index set이라는 것은 각 block을 찾아가기 위한 seperator들의 집합이다. seperator의 수가 많아지면 여러 index set block으로 분리하여 seperator를 저장해야 함
B 트리에서 인덱스를 저장하는 각 노드는 고정된 수의 고정 길이 인덱스를 저장하기 때문에 고정 길이 데이터로 표현할 수 있었다. 그러나 B+ 트리의 index set은 가변 길이로 표현되는 separator를 저장해야하며, 저장되는 separator의 수도 가변적이다. B+ 트리의 index set의 가장 큰 문제는 separator의 크기가 가변적이기 때문에 이진 탐색(binary search)를 이용할 수 없다는 것이다.

