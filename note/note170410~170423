20170410~20170423 노트

* 계획
 - WAL이 무엇인지 공부하기
 - forestdb 코드분석 전체적인 flow 이해하기 - forestdb.h forestdb.cc
 - forestdb에서 WAL기능 이해하기

* WAL이 무엇인지 공부하기
 - Write-ahead logging. 데이터베이스 시스템에서 ACID의 특성 가운데 원자성과 내구성을 제공하는 기술의 한 계열로 모든 수정은 적용 이전에 로그에 기록된다. 데이터 무결성
 - 일반적으로 redo 및 undo 정보는 둘 다 로그에 저장
 - WAL은 데이터베이스 업데이트가 인 플레이스 알고리즘을 사용할 수 있게 함
 - PostgreSQL, SQLite, 몽고DB, 아파치 HBase 등이 WAL을 사용
 - 트랜잭션에 의해 변경된 모든 데이터 파일보다는 트랜잭션이 커밋된 것을 보장하기 위해 로그 파일만 디스크에 써야 하기 때문에 WAL을 사용하면 디스크 쓰기 수가 상당히 줄어듦
 - 로그파일은 순차적으로 작성되며, 따라서 로그 파일 동기화 비용은 데이터 페이지 쓰기 비용보다 훨씬 적다. 이는 특히 서버가 데이터 스토어의 서로 다른 부분을 건드리는 소규모 트랜잭션을 다수 처리하는 경우에 그렇다. 또한, 서버가 소규모 동시 트랜잭션을 다수 처리하는 경우에 로그 파일의 fsync 하나로 여러 가지 트랜잭션을 충분히 커밋할 수 있다.
 - 온라인 백업 및 PIT(point-in-time) 복구 지원을 가능하게 함.
 - WAL 로그는 각각의 크기가 보통 16MB인 세그먼트 파일 집합,(서버 빌드 시 --with-wal-segsize로 크기 변경 가능) 데이터 디렉토리 하위인 pg_xlog 디렉토리에 저장. 각 세그먼트는 일반적으로 각각 9kB의 페이지로 분할된다.(이 크기는 -with-wal-blocksize 환경설정 옵션으로 변경가능)
 - 로그가 메인 데이터베이스 파일이 아닌 다른 디스크에 위치한 경우에 이것은 장점이 됨. 서버가 종료된 상태에서 pg_xlog 디렉토리를 다른 위치로 옮기고, 메인 데이터 디렉토리의 원래 위치로부터 새 위치로 심볼릭 링크를 생성하면 된다.

* forestdb 코드분석 전체적인 flow 이해하기 - forestdb.h forestdb.cc

* forestdb에서 WAL기능 이해하기
